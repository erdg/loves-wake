{"version":3,"sources":["webpack:///route-login.chunk.245f0.js","webpack:///./routes/login/components/login-form-inputs.js","webpack:///./routes/login/components/login-form.js","webpack:///./routes/login/components/login-form-container.js","webpack:///./routes/login/index.js"],"names":["webpackJsonp","TVzt","module","__webpack_exports__","__webpack_require__","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","login_form__classCallCheck","instance","Constructor","login_form__possibleConstructorReturn","login_form__inherits","login_form_container__classCallCheck","login_form_container__possibleConstructorReturn","login_form_container__inherits","login__classCallCheck","login__possibleConstructorReturn","login__inherits","defineProperty","preact_min","flex_container","preact_router_es","isEmail","isEmail_default","n","classnames","classnames_default","_ref","class","login_form_inputs_EmailInput","props","email","onChange","handleEmailChange","type","placeholder","_ref2","_ref3","login_form_inputs_PasswordInput","_Component","PasswordInput","this","apply","arguments","render","password","handlePasswordChange","showPassword","onClick","toggleShowPassword","toast","login_form__ref","login_form_LoginForm","LoginForm","formClasses","has-error","emailError","passwordError","loginBtnClasses","loading","loginBtnLoading","recoverBtnClasses","recoverBtnLoading","emailHintClasses","d-hide","passwordHintClasses","error","active","showServerError","serverError","handleLogin","handleRecoverAccount","login_form_container_LoginFormContainer","LoginFormContainer","_this","_handleLogin","state","setState","fetch","then","resp","json","token","loginSuccess","handleLoginSuccess","user","_handleRecoverAccount","recoverAccountSuccess","handleRecoverAccountSuccess","_handleEmailChange","bind","_handlePasswordChange","_toggleShowPassword","e","target","login_Login","Login","formRail"],"mappings":"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","file":"route-login.chunk.245f0.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ \"TVzt\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"EBst\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ./components/flex-container/index.js\nvar flex_container = __webpack_require__(\"o5xd\");\n\n// EXTERNAL MODULE: ./node_modules/preact-router/dist/preact-router.es.js\nvar preact_router_es = __webpack_require__(\"y+SO\");\n\n// EXTERNAL MODULE: ./node_modules/validator/lib/isEmail.js\nvar isEmail = __webpack_require__(\"2LX0\");\nvar isEmail_default = /*#__PURE__*/__webpack_require__.n(isEmail);\n\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"HW6M\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: ./components/dialog.js\nvar dialog = __webpack_require__(\"wI7h\");\n\n// CONCATENATED MODULE: ./routes/login/components/login-form-inputs.js\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar _ref = Object(preact_min[\"h\"])(\n   'label',\n   { 'class': 'form-label' },\n   'Email'\n);\n\nvar login_form_inputs_EmailInput = function EmailInput(props) {\n   return Object(preact_min[\"h\"])(\n      'div',\n      null,\n      _ref,\n      Object(preact_min[\"h\"])('input', {\n         value: props.email,\n         onChange: props.handleEmailChange,\n         type: 'email',\n         'class': 'form-input',\n         placeholder: 'Your email'\n      })\n   );\n};\n\nvar _ref2 = Object(preact_min[\"h\"])(\n   'label',\n   { 'class': 'form-label' },\n   'Password'\n);\n\nvar _ref3 = Object(preact_min[\"h\"])('i', { 'class': 'form-icon' });\n\nvar login_form_inputs_PasswordInput = function (_Component) {\n   _inherits(PasswordInput, _Component);\n\n   function PasswordInput() {\n      _classCallCheck(this, PasswordInput);\n\n      return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   PasswordInput.prototype.render = function render(props) {\n      return Object(preact_min[\"h\"])(\n         'div',\n         null,\n         _ref2,\n         Object(preact_min[\"h\"])('input', {\n            value: props.password,\n            onChange: props.handlePasswordChange,\n            'class': 'form-input',\n            type: props.showPassword ? \"text\" : \"password\",\n            placeholder: 'Your password'\n         }),\n         Object(preact_min[\"h\"])(\n            'label',\n            { 'class': 'form-switch' },\n            Object(preact_min[\"h\"])('input', { type: 'checkbox',\n               onClick: props.toggleShowPassword\n            }),\n            _ref3,\n            'Show password'\n         )\n      );\n   };\n\n   return PasswordInput;\n}(preact_min[\"Component\"]);\n\n\n// EXTERNAL MODULE: ./components/toast.js\nvar toast = __webpack_require__(\"r33O\");\n\n// CONCATENATED MODULE: ./routes/login/components/login-form.js\n\n\nfunction login_form__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction login_form__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction login_form__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\nvar login_form__ref = Object(preact_min[\"h\"])(\n   'h1',\n   null,\n   'Login'\n);\n\nvar login_form_LoginForm = function (_Component) {\n   login_form__inherits(LoginForm, _Component);\n\n   function LoginForm() {\n      login_form__classCallCheck(this, LoginForm);\n\n      return login_form__possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   LoginForm.prototype.render = function render(props) {\n\n      var formClasses = classnames_default()('form-group', { 'has-error': props.emailError || props.passwordError });\n\n      var loginBtnClasses = classnames_default()('btn', 'btn-primary', { 'loading': props.loginBtnLoading });\n\n      var recoverBtnClasses = classnames_default()('btn', 'btn-link', 'float-right', { 'loading': props.recoverBtnLoading });\n\n      var emailHintClasses = classnames_default()('form-input-hint', { 'd-hide': !props.emailError });\n\n      var passwordHintClasses = classnames_default()('form-input-hint', { 'd-hide': !props.passwordError });\n\n      return Object(preact_min[\"h\"])(\n         'div',\n         { 'class': formClasses },\n         login_form__ref,\n         Object(preact_min[\"h\"])(\n            toast[\"a\" /* Toast */],\n            { error: true, active: props.showServerError },\n            props.serverError\n         ),\n         Object(preact_min[\"h\"])(login_form_inputs_EmailInput, {\n            email: props.email,\n            handleEmailChange: props.handleEmailChange\n         }),\n         Object(preact_min[\"h\"])(\n            'p',\n            { 'class': emailHintClasses },\n            'Please enter a valid email address'\n         ),\n         Object(preact_min[\"h\"])(login_form_inputs_PasswordInput, {\n            password: props.password,\n            handlePasswordChange: props.handlePasswordChange,\n            toggleShowPassword: props.toggleShowPassword,\n            showPassword: props.showPassword\n         }),\n         Object(preact_min[\"h\"])(\n            'p',\n            { 'class': passwordHintClasses },\n            'Gotta have a password to login...'\n         ),\n         Object(preact_min[\"h\"])(\n            'div',\n            { 'class': 'row' },\n            Object(preact_min[\"h\"])(\n               'button',\n               {\n                  'class': loginBtnClasses,\n                  onClick: props.handleLogin\n               },\n               'Login'\n            ),\n            Object(preact_min[\"h\"])(\n               'button',\n               {\n                  'class': recoverBtnClasses,\n                  onClick: props.handleRecoverAccount\n               },\n               'Recover account'\n            )\n         )\n      );\n   };\n\n   return LoginForm;\n}(preact_min[\"Component\"]);\n\n\n// CONCATENATED MODULE: ./routes/login/components/login-form-container.js\n\n\nfunction login_form_container__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction login_form_container__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction login_form_container__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\nvar login_form_container_LoginFormContainer = function (_Component) {\n   login_form_container__inherits(LoginFormContainer, _Component);\n\n   function LoginFormContainer(props) {\n      login_form_container__classCallCheck(this, LoginFormContainer);\n\n      // this._handleLogin = this._handleLogin.bind(this);\n      var _this = login_form_container__possibleConstructorReturn(this, _Component.call(this, props));\n\n      _this._handleLogin = function () {\n         // if not valid email address\n         if (!isEmail_default()(_this.state.email)) {\n            // throw email error, don't submit\n            _this.setState({ emailError: true });\n            return;\n         } else {\n            _this.setState({ emailError: false });\n         }\n\n         // make sure there's a password\n         if (!_this.state.password) {\n            _this.setState({ passwordError: true });\n            return;\n         } else {\n            _this.setState({ passwordError: false });\n         }\n\n         // loading spinner on button\n         _this.setState({ loginBtnLoading: true });\n\n         fetch(\"https://erikdgustafson.com/api/!loginUser?\" + _this.state.email + \"&\" + _this.state.password).then(function (resp) {\n            return resp.json();\n         }).then(function (json) {\n            if (json.error) {\n               _this.setState({\n                  // display errors and remove loading spinner\n                  serverError: json.error,\n                  showServerError: true,\n                  loginBtnLoading: false\n               });\n            } else if (json.token) {\n               // remove loading spinner\n               // set loginSuccess flag to true to trigger route change to 'Profile'\n               // FIXME - the above feels like a hack. \n               // might be time to add a redux-style store?\n               _this.setState({ loginBtnLoading: false, loginSuccess: true });\n               // send event up to set global app state with logged in user\n               _this.props.handleLoginSuccess(json.user, json.token);\n            }\n         }).then(function () {\n            if (_this.state.loginSuccess) {\n               Object(preact_router_es[\"c\" /* route */])('/profile', true);\n            }\n         });\n\n         // clear password\n         _this.setState({ password: '' });\n      };\n\n      _this._handleRecoverAccount = function () {\n         // loading spinner on button\n         _this.setState({ recoverBtnLoading: true });\n\n         fetch(\"https://erikdgustafson.com/api/!recoverUserAccount?\" + _this.state.email).then(function (resp) {\n            return resp.json();\n         }).then(function (json) {\n            if (json.error) {\n               _this.setState({\n                  // display errors and remove loading spinner\n                  serverError: json.error,\n                  showServerError: true,\n                  recoverBtnLoading: false\n               });\n            } else if (json.email) {\n               // remove loading spinner\n               // set loginSuccess flag to true to trigger route change to 'Profile'\n               // FIXME - the above feels like a hack. \n               // might be time to add a redux-style store?\n               _this.setState({ recoverBtnLoading: false, recoverAccountSuccess: true });\n               // send event up to set global app state with logged in user\n               _this.props.handleRecoverAccountSuccess(json.email);\n            }\n         }).then(function () {\n            if (_this.state.recoverAccountSuccess) {\n               Object(preact_router_es[\"c\" /* route */])('/recover-account', true);\n            }\n         });\n      };\n\n      _this._handleEmailChange = _this._handleEmailChange.bind(_this);\n      _this._handlePasswordChange = _this._handlePasswordChange.bind(_this);\n      _this._toggleShowPassword = _this._toggleShowPassword.bind(_this);\n      _this.state = {\n         email: '',\n         emailError: false,\n         password: '',\n         passwordError: false,\n         showPassword: false,\n         serverError: '',\n         showServerError: false,\n         loginBtnLoading: false,\n         recoverBtnLoading: false,\n         loginSuccess: false,\n         recoverAccountSuccess: false\n      };\n      return _this;\n   }\n\n   LoginFormContainer.prototype._toggleShowPassword = function _toggleShowPassword() {\n      var showPassword = !this.state.showPassword;\n      this.setState({ showPassword: showPassword });\n   };\n\n   LoginFormContainer.prototype._handleEmailChange = function _handleEmailChange(e) {\n      this.setState({ email: e.target.value });\n   };\n\n   LoginFormContainer.prototype._handlePasswordChange = function _handlePasswordChange(e) {\n      this.setState({ password: e.target.value });\n   };\n\n   LoginFormContainer.prototype.render = function render() {\n      return Object(preact_min[\"h\"])(login_form_LoginForm, {\n\n         serverError: this.state.serverError,\n         showServerError: this.state.showServerError,\n\n         email: this.state.email,\n         emailError: this.state.emailError,\n         handleEmailChange: this._handleEmailChange,\n\n         password: this.state.password,\n         passwordError: this.state.passwordError,\n         handlePasswordChange: this._handlePasswordChange,\n\n         toggleShowPassword: this._toggleShowPassword,\n         showPassword: this.state.showPassword,\n\n         handleLogin: this._handleLogin,\n\n         loginBtnLoading: this.state.loginBtnLoading,\n         recoverBtnLoading: this.state.recoverBtnLoading,\n\n         handleRecoverAccount: this._handleRecoverAccount\n\n      });\n   };\n\n   return LoginFormContainer;\n}(preact_min[\"Component\"]);\n\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib?{\"babelrc\":false,\"presets\":[[\"/home/erik/loves-wake/node_modules/babel-preset-env/lib/index.js\",{\"loose\":true,\"uglify\":true,\"modules\":false,\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"/home/erik/loves-wake/node_modules/babel-preset-stage-1/lib/index.js\"],\"plugins\":[\"/home/erik/loves-wake/node_modules/babel-plugin-transform-object-assign/lib/index.js\",\"/home/erik/loves-wake/node_modules/babel-plugin-transform-decorators-legacy/lib/index.js\",\"/home/erik/loves-wake/node_modules/babel-plugin-transform-react-constant-elements/lib/index.js\",\"/home/erik/loves-wake/node_modules/babel-plugin-transform-react-remove-prop-types/lib/index.js\",[\"/home/erik/loves-wake/node_modules/babel-plugin-transform-react-jsx/lib/index.js\",{\"pragma\":\"h\"}],[\"/home/erik/loves-wake/node_modules/babel-plugin-jsx-pragmatic/jsx-pragmatic.js\",{\"module\":\"preact\",\"export\":\"h\",\"import\":\"h\"}]]}!./routes/login/index.js\n\n\nfunction login__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction login__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction login__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar login_Login = function (_Component) {\n   login__inherits(Login, _Component);\n\n   function Login() {\n      login__classCallCheck(this, Login);\n\n      return login__possibleConstructorReturn(this, _Component.apply(this, arguments));\n   }\n\n   Login.prototype.render = function render(props) {\n      return Object(preact_min[\"h\"])(flex_container[\"a\" /* FlexContainer */], {\n         formRail: Object(preact_min[\"h\"])(login_form_container_LoginFormContainer, {\n            handleLoginSuccess: function handleLoginSuccess(user, token) {\n               return props.handleLoginSuccess(user, token);\n            },\n            handleRecoverAccountSuccess: function handleRecoverAccountSuccess(email) {\n               return props.handleRecoverAccountSuccess(email);\n            }\n         })\n      });\n   };\n\n   return Login;\n}(preact_min[\"Component\"]);\n\n/* harmony default export */ var login = __webpack_exports__[\"default\"] = (login_Login);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-login.chunk.245f0.js","import { Component } from 'preact';\n\nimport { Dialog } from '../../../components/dialog';\n\nconst EmailInput = (props) => (\n   <div>\n      <label class=\"form-label\">Email</label>\n      <input\n         value={props.email}\n         onChange={props.handleEmailChange}\n         type=\"email\"\n         class=\"form-input\" \n         placeholder=\"Your email\"\n      />\n   </div>\n)\n\nclass PasswordInput extends Component {\n\n   render (props) {\n      return (\n         <div>\n\n            <label class=\"form-label\">\n               Password\n            </label>\n            <input \n               value={ props.password }\n               onChange={ props.handlePasswordChange }\n               class=\"form-input\" \n               type={ props.showPassword ? \"text\" : \"password\" }\n               placeholder=\"Your password\"\n            />\n\n            <label class=\"form-switch\">\n               <input type=\"checkbox\" \n                  onClick={ props.toggleShowPassword } \n               />\n               <i class=\"form-icon\"></i>\n               Show password\n            </label>\n\n         </div>\n      )\n   }\n}\n\nexport { EmailInput, PasswordInput };\n\n\n\n// WEBPACK FOOTER //\n// ./routes/login/components/login-form-inputs.js","import { Component } from 'preact';\nimport classNames from 'classnames';\n\nimport { EmailInput, PasswordInput } from './login-form-inputs';\nimport { Dialog } from '../../../components/dialog';\nimport { Toast } from '../../../components/toast';\n\nclass LoginForm extends Component {\n\n   render (props) {\n\n      let formClasses = classNames(\n         'form-group', { 'has-error': props.emailError || props.passwordError }\n      );\n\n      let loginBtnClasses = classNames(\n         'btn', 'btn-primary', { 'loading': props.loginBtnLoading }\n      );\n\n      let recoverBtnClasses = classNames(\n         'btn', 'btn-link', 'float-right', { 'loading': props.recoverBtnLoading }\n      );\n\n      let emailHintClasses = classNames(\n         'form-input-hint', { 'd-hide': !props.emailError }\n      );\n\n      let passwordHintClasses = classNames(\n         'form-input-hint', { 'd-hide': !props.passwordError }\n      );\n\n      return (\n         <div class={ formClasses }>\n\n            <h1>Login</h1>\n\n            <Toast error active={props.showServerError}>\n               {props.serverError}\n            </Toast>\n\n            <EmailInput \n               email={props.email}\n               handleEmailChange={props.handleEmailChange}\n            />\n\n            <p class={ emailHintClasses }>\n               Please enter a valid email address\n            </p>\n\n            <PasswordInput \n               password={props.password}\n               handlePasswordChange={props.handlePasswordChange}\n               toggleShowPassword={ props.toggleShowPassword }\n               showPassword={ props.showPassword }\n            />\n\n            <p class={ passwordHintClasses }>\n               Gotta have a password to login...\n            </p>\n\n            <div class=\"row\">\n               <button \n                  class={ loginBtnClasses }\n                  onClick={ props.handleLogin }\n               >\n                  Login\n               </button>\n               <button \n                  class={ recoverBtnClasses }\n                  onClick={ props.handleRecoverAccount }\n               >\n                  Recover account\n               </button>\n\n            </div>\n\n         </div>\n      )\n   }\n}\n\nexport { LoginForm };\n\n\n\n// WEBPACK FOOTER //\n// ./routes/login/components/login-form.js","import { h, Component } from 'preact';\nimport { route } from 'preact-router';\nimport isEmail from 'validator/lib/isEmail';\n\nimport { LoginForm } from './login-form';\n\n\nclass LoginFormContainer extends Component { \n   constructor (props) {\n      super(props);\n      // this._handleLogin = this._handleLogin.bind(this);\n      this._handleEmailChange = this._handleEmailChange.bind(this);\n      this._handlePasswordChange = this._handlePasswordChange.bind(this);\n      this._toggleShowPassword = this._toggleShowPassword.bind(this);\n      this.state = {\n         email: '',\n         emailError: false,\n         password: '',\n         passwordError: false,\n         showPassword: false,\n         serverError: '',\n         showServerError: false,\n         loginBtnLoading: false,\n         recoverBtnLoading: false,\n         loginSuccess: false,\n         recoverAccountSuccess:false\n      };\n   }\n\n   _toggleShowPassword () {\n      let showPassword = !this.state.showPassword;\n      this.setState({ showPassword });\n   }\n\n   _handleLogin = () => {\n      // if not valid email address\n      if ( !(isEmail(this.state.email)) ) {\n         // throw email error, don't submit\n         this.setState({ emailError: true });\n         return\n      } else {\n         this.setState({ emailError: false });\n      }\n\n      // make sure there's a password\n      if (!this.state.password) {\n         this.setState({ passwordError: true });\n         return\n      } else { \n         this.setState({ passwordError: false }); \n      }\n\n      // loading spinner on button\n      this.setState({ loginBtnLoading: true });\n\n      fetch(\"https://erikdgustafson.com/api/!loginUser?\"\n         + this.state.email\n         + \"&\"\n         + this.state.password\n      )\n      .then( (resp) => {\n         return resp.json();\n      })\n      .then( (json) => {\n         if (json.error) {\n            this.setState({ \n               // display errors and remove loading spinner\n               serverError: json.error, \n               showServerError: true,\n               loginBtnLoading: false\n            });\n\n         } else if (json.token) {\n            // remove loading spinner\n            // set loginSuccess flag to true to trigger route change to 'Profile'\n            // FIXME - the above feels like a hack. \n            // might be time to add a redux-style store?\n            this.setState({ loginBtnLoading: false, loginSuccess: true});\n            // send event up to set global app state with logged in user\n            this.props.handleLoginSuccess(json.user, json.token);\n         }\n      })\n      .then( () => {\n         if (this.state.loginSuccess) {\n            route('/profile', true);\n         }\n      });\n\n      // clear password\n      this.setState({ password: '' });\n\n   }\n\n   _handleRecoverAccount = () => {\n      // loading spinner on button\n      this.setState({ recoverBtnLoading: true });\n\n      fetch(\"https://erikdgustafson.com/api/!recoverUserAccount?\"\n         + this.state.email\n      )\n      .then( (resp) => {\n         return resp.json();\n      })\n      .then( (json) => {\n         if (json.error) {\n            this.setState({ \n               // display errors and remove loading spinner\n               serverError: json.error, \n               showServerError: true,\n               recoverBtnLoading: false\n            });\n\n         } else if (json.email) {\n            // remove loading spinner\n            // set loginSuccess flag to true to trigger route change to 'Profile'\n            // FIXME - the above feels like a hack. \n            // might be time to add a redux-style store?\n            this.setState({ recoverBtnLoading: false, recoverAccountSuccess: true});\n            // send event up to set global app state with logged in user\n            this.props.handleRecoverAccountSuccess(json.email);\n         }\n      })\n      .then( () => {\n         if (this.state.recoverAccountSuccess) {\n            route('/recover-account', true);\n         }\n      });\n\n   }\n\n   _handleEmailChange (e) {\n      this.setState({ email: e.target.value });\n   }\n\n   _handlePasswordChange (e) {\n      this.setState({ password: e.target.value });\n   }\n\n   render () {\n      return (\n         <LoginForm \n\n            serverError={ this.state.serverError }\n            showServerError={ this.state.showServerError }\n\n            email={ this.state.email }\n            emailError={ this.state.emailError }\n            handleEmailChange={ this._handleEmailChange }\n\n            password={ this.state.password }\n            passwordError={ this.state.passwordError }\n            handlePasswordChange={ this._handlePasswordChange }\n\n            toggleShowPassword={ this._toggleShowPassword }\n            showPassword={ this.state.showPassword }\n\n            handleLogin={ this._handleLogin }\n\n            loginBtnLoading={ this.state.loginBtnLoading }\n            recoverBtnLoading={ this.state.recoverBtnLoading }\n\n            handleRecoverAccount={ this._handleRecoverAccount }\n\n         />\n      )\n   }\n}\n\nexport { LoginFormContainer };\n\n\n\n// WEBPACK FOOTER //\n// ./routes/login/components/login-form-container.js","import { h, Component } from 'preact';\n\nimport { FlexContainer } from '../../components/flex-container';\nimport { LoginFormContainer } from './components/login-form-container';\n\nclass Login extends Component {\n   render (props) {\n      return (\n         <FlexContainer\n            formRail={\n               <LoginFormContainer\n                  handleLoginSuccess={ (user, token) => props.handleLoginSuccess(user, token) }\n                  handleRecoverAccountSuccess={ (email) => props.handleRecoverAccountSuccess(email) }\n               />\n            }\n         />\n      );\n   }\n}\n\nexport default Login;\n\n\n\n\n// WEBPACK FOOTER //\n// ./routes/login/index.js"],"sourceRoot":""}